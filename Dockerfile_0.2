# FROM python:3
FROM ubuntu:18.04

# todo
# install: xdpyinfo, 

# avoid apt-get install failing on tzdata b/c of interactive prompt
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
# for testing X11 display with xeyes
    apt-get install -y x11-apps && \
    apt-get install -y xvfb llvm-dev xserver-xorg-dev && \
    apt-get install -y build-essential libx11-dev xorg-dev libglu1-mesa-dev freeglut3-dev libglu1-mesa libglu1-mesa-dev libgl1-mesa-glx libgl1-mesa-dev python3-dev

RUN apt-get install -y python3-pip
RUN apt-get install -y git-all

# RUN set -xe; \
#     apk --update add --no-cache --virtual .runtime-deps xvfb llvm5-libs xdpyinfo; \
#     apk add --no-cache --virtual .build-deps llvm-dev build-base zlib-dev glproto xorg-server-dev python-dev; \
#     mkdir -p /var/tmp/build; \
#     cd /var/tmp/build; \
#     wget "https://mesa.freedesktop.org/archive/mesa-18.0.1.tar.gz"; \
#     tar xfv mesa-18.0.1.tar.gz; \
#     rm mesa-18.0.1.tar.gz; \
#     cd mesa-18.0.1; \
#     ./configure --enable-glx=gallium-xlib --with-gallium-drivers=swrast,swr --disable-dri --disable-gbm --disable-egl --enable-gallium-osmesa --prefix=/usr/local; \
#     make; \
#     make install; \
#     cd .. ; \
#     rm -rf mesa-18.0.1; \
#     if [ "${MESA_DEMOS}" == "true" ]; then \
#         apk add --no-cache --virtual .mesa-demos-runtime-deps glu glew \
#         && apk add --no-cache --virtual .mesa-demos-build-deps glew-dev freeglut-dev \
#         && wget "ftp://ftp.freedesktop.org/pub/mesa/demos/mesa-demos-8.4.0.tar.gz" \
#         && tar xfv mesa-demos-8.4.0.tar.gz \
#         && rm mesa-demos-8.4.0.tar.gz \
#         && cd mesa-demos-8.4.0 \
#         && ./configure --prefix=/usr/local \
#         && make \
#         && make install \
#         && cd .. \
#         && rm -rf mesa-demos-8.4.0 \
#         && apk del .mesa-demos-build-deps; \
#     fi; \
#     apk del .build-deps;


WORKDIR /tmp

COPY ./requirements.txt ./

RUN pip3 install --no-cache-dir -r requirements.txt && \
    rm ./requirements.txt
    
RUN git clone http://github.com/ccappelle/pyrosim && \
    cd pyrosim && \
    ./build.sh && \
    pip3 install -e .
    
